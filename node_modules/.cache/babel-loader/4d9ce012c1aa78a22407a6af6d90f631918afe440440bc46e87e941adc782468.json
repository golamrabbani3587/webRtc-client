{"ast":null,"code":"class PeerService {\n  constructor() {\n    if (!this.peer) {\n      this.peer = new RTCPeerConnection({\n        iceServers: [{\n          urls: [\"stun:stun.l.google.com:19302\", \"stun:global.stun.twilio.com:3478\"]\n        }]\n      });\n    }\n  }\n  async getAnswer(offer) {\n    if (this.peer) {\n      await this.peer.setRemoteDescription(offer);\n      const ans = await this.peer.createAnswer();\n      await this.peer.setLocalDescription(new RTCSessionDescription(ans));\n      return ans;\n    }\n  }\n  async setLocalDescription(ans) {\n    if (this.peer) {\n      await this.peer.setRemoteDescription(new RTCSessionDescription(ans));\n    }\n  }\n  async getOffer() {\n    if (this.peer) {\n      const offer = await this.peer.createOffer();\n      await this.peer.setLocalDescription(new RTCSessionDescription(offer));\n      return offer;\n    }\n  }\n}\nexport default new PeerService();","map":{"version":3,"names":["PeerService","constructor","peer","RTCPeerConnection","iceServers","urls","getAnswer","offer","setRemoteDescription","ans","createAnswer","setLocalDescription","RTCSessionDescription","getOffer","createOffer"],"sources":["/Users/md.golamrabbani/Desktop/web-rtc/React-webRTC/client/src/service/peer.js"],"sourcesContent":["class PeerService {\n  constructor() {\n    if (!this.peer) {\n      this.peer = new RTCPeerConnection({\n        iceServers: [\n          {\n            urls: [\n              \"stun:stun.l.google.com:19302\",\n              \"stun:global.stun.twilio.com:3478\",\n            ],\n          },\n        ],\n      });\n    }\n  }\n\n  async getAnswer(offer) {\n    if (this.peer) {\n      await this.peer.setRemoteDescription(offer);\n      const ans = await this.peer.createAnswer();\n      await this.peer.setLocalDescription(new RTCSessionDescription(ans));\n      return ans;\n    }\n  }\n\n  async setLocalDescription(ans) {\n    if (this.peer) {\n      await this.peer.setRemoteDescription(new RTCSessionDescription(ans));\n    }\n  }\n\n  async getOffer() {\n    if (this.peer) {\n      const offer = await this.peer.createOffer();\n      await this.peer.setLocalDescription(new RTCSessionDescription(offer));\n      return offer;\n    }\n  }\n}\n\nexport default new PeerService();\n"],"mappings":"AAAA,MAAMA,WAAW,CAAC;EAChBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAAC,IAAI,CAACC,IAAI,EAAE;MACd,IAAI,CAACA,IAAI,GAAG,IAAIC,iBAAiB,CAAC;QAChCC,UAAU,EAAE,CACV;UACEC,IAAI,EAAE,CACJ,8BAA8B,EAC9B,kCAAkC;QAEtC,CAAC;MAEL,CAAC,CAAC;IACJ;EACF;EAEA,MAAMC,SAASA,CAACC,KAAK,EAAE;IACrB,IAAI,IAAI,CAACL,IAAI,EAAE;MACb,MAAM,IAAI,CAACA,IAAI,CAACM,oBAAoB,CAACD,KAAK,CAAC;MAC3C,MAAME,GAAG,GAAG,MAAM,IAAI,CAACP,IAAI,CAACQ,YAAY,CAAC,CAAC;MAC1C,MAAM,IAAI,CAACR,IAAI,CAACS,mBAAmB,CAAC,IAAIC,qBAAqB,CAACH,GAAG,CAAC,CAAC;MACnE,OAAOA,GAAG;IACZ;EACF;EAEA,MAAME,mBAAmBA,CAACF,GAAG,EAAE;IAC7B,IAAI,IAAI,CAACP,IAAI,EAAE;MACb,MAAM,IAAI,CAACA,IAAI,CAACM,oBAAoB,CAAC,IAAII,qBAAqB,CAACH,GAAG,CAAC,CAAC;IACtE;EACF;EAEA,MAAMI,QAAQA,CAAA,EAAG;IACf,IAAI,IAAI,CAACX,IAAI,EAAE;MACb,MAAMK,KAAK,GAAG,MAAM,IAAI,CAACL,IAAI,CAACY,WAAW,CAAC,CAAC;MAC3C,MAAM,IAAI,CAACZ,IAAI,CAACS,mBAAmB,CAAC,IAAIC,qBAAqB,CAACL,KAAK,CAAC,CAAC;MACrE,OAAOA,KAAK;IACd;EACF;AACF;AAEA,eAAe,IAAIP,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}