{"ast":null,"code":"var _jsxFileName = \"/Users/md.golamrabbani/Desktop/web-rtc/React-webRTC/client/src/screens/Lobby.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSocket } from \"../context/SocketProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LobbyScreen = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const socket = useSocket();\n  const navigate = useNavigate();\n  const handleSubmitForm = useCallback(e => {\n    console.log('data showing when lobby from submit');\n    e.preventDefault();\n    socket.emit(\"room:join\", {\n      email,\n      room\n    });\n  }, [email, room, socket]);\n  const handleJoinRoom = useCallback(data => {\n    console.log(data, 'data showing when emit from backend');\n    const {\n      email,\n      room\n    } = data;\n    navigate(`/room/${room}`);\n  }, [navigate]);\n  useEffect(() => {\n    socket.on(\"room:join\", handleJoinRoom);\n    return () => {\n      socket.off(\"room:join\", handleJoinRoom);\n    };\n  }, [socket, handleJoinRoom]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lobby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"room\",\n        children: \"Room Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"room\",\n        value: room,\n        onChange: e => setRoom(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(LobbyScreen, \"heTC24EFzgnn3gPKdH/Gbl9Qkfs=\", false, function () {\n  return [useSocket, useNavigate];\n});\n_c = LobbyScreen;\nexport default LobbyScreen;\nvar _c;\n$RefreshReg$(_c, \"LobbyScreen\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useNavigate","useSocket","jsxDEV","_jsxDEV","LobbyScreen","_s","email","setEmail","room","setRoom","socket","navigate","handleSubmitForm","e","console","log","preventDefault","emit","handleJoinRoom","data","on","off","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/md.golamrabbani/Desktop/web-rtc/React-webRTC/client/src/screens/Lobby.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSocket } from \"../context/SocketProvider\";\n\nconst LobbyScreen = () => {\n  const [email, setEmail] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n\n  const socket = useSocket();\n  const navigate = useNavigate();\n\n  const handleSubmitForm = useCallback(\n    (e) => {\n      console.log('data showing when lobby from submit');\n      \n      e.preventDefault();\n      socket.emit(\"room:join\", { email, room });\n    },\n    [email, room, socket]\n  );\n\n  const handleJoinRoom = useCallback(\n    (data) => {\n      console.log(data, 'data showing when emit from backend');\n      \n      const { email, room } = data;\n      navigate(`/room/${room}`)\n    },\n    [navigate]\n  );\n\n  useEffect(() => {\n    socket.on(\"room:join\", handleJoinRoom);\n    return () => {\n      socket.off(\"room:join\", handleJoinRoom);\n    };\n  }, [socket, handleJoinRoom]);\n  return (\n    <div>\n      <h1>Lobby</h1>\n      <form onSubmit={handleSubmitForm}>\n        <label htmlFor=\"email\">Email ID</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <br />\n        <label htmlFor=\"room\">Room Number</label>\n        <input\n          type=\"text\"\n          id=\"room\"\n          value={room}\n          onChange={(e) => setRoom(e.target.value)}\n        />\n        <br />\n        <button>Join</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LobbyScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}