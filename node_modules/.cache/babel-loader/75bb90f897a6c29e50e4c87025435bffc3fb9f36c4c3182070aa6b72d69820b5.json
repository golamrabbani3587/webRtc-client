{"ast":null,"code":"var _jsxFileName = \"/Users/md.golamrabbani/Desktop/web-rtc/React-webRTC/client/src/screens/Room.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback, useState } from \"react\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ReactPlayer from \"react-player\";\nimport peer from \"../service/peer\";\nimport { useSocket } from \"../context/SocketProvider\";\nimport '../Room.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomPage = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const socket = useSocket();\n  const [remoteSocketId, setRemoteSocketId] = useState(null);\n  const [myStream, setMyStream] = useState();\n  const [remoteStream, setRemoteStream] = useState();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [isCalling, setIsCalling] = useState(false); // State to track if the call is ongoing\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const storeToken = localStorage.getItem('token');\n    if (!storeToken && !storedUser) {\n      navigate('/login');\n    }\n  }, []);\n  const handleUserJoined = useCallback(({\n    email,\n    id\n  }) => {\n    console.log(`Email ${email} joined room`);\n    setRemoteSocketId(id);\n  }, []);\n  const handleCallUser = useCallback(async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    });\n    const offer = await peer.getOffer();\n    socket.emit(\"user:call\", {\n      to: remoteSocketId,\n      offer\n    });\n    setMyStream(stream);\n    setIsCalling(true); // Set the call as ongoing\n  }, [remoteSocketId, socket]);\n\n  // const handleEndCall = useCallback(() => {\n  //   socket.emit(\"call:end\", { to: remoteSocketId });\n  //   setIsCalling(false); // Set the call as ended\n  //   setMyStream(null); // Stop the stream\n  //   setRemoteStream(null); // Stop the remote stream\n\n  //   // Disconnect socket after the call ends\n  //   socket.disconnect();\n  //   console.log(\"Socket disconnected\");\n  // }, [remoteSocketId, socket]);\n\n  const handleEndCall = useCallback(() => {\n    // Stop all tracks of the local stream\n    if (myStream) {\n      myStream.getTracks().forEach(track => track.stop());\n    }\n    // Reset streams and call state\n    setMyStream(null);\n    setRemoteStream(null);\n    // setIsCallStarted(false);\n    socket.disconnect(); // Disconnect from the socket\n    navigate(\"/room-management\"); // Navigate to room-management page\n  }, [myStream, socket, navigate]);\n  const handleIncommingCall = useCallback(async ({\n    from,\n    offer\n  }) => {\n    setRemoteSocketId(from);\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    });\n    setMyStream(stream);\n    console.log(`Incoming Call from ${from}`, offer);\n    const ans = await peer.getAnswer(offer);\n    socket.emit(\"call:accepted\", {\n      to: from,\n      ans\n    });\n  }, [socket]);\n  const sendStreams = useCallback(() => {\n    if (!myStream) return;\n    const senders = peer.peer.getSenders();\n    for (const track of myStream.getTracks()) {\n      const existingSender = senders.find(sender => sender.track === track);\n      if (!existingSender) {\n        peer.peer.addTrack(track, myStream);\n      }\n    }\n  }, [myStream]);\n  const handleCallAccepted = useCallback(({\n    from,\n    ans\n  }) => {\n    peer.setLocalDescription(ans);\n    console.log(\"Call Accepted!\");\n    sendStreams();\n  }, [sendStreams]);\n  const handleNegoNeeded = useCallback(async () => {\n    const offer = await peer.getOffer();\n    socket.emit(\"peer:nego:needed\", {\n      offer,\n      to: remoteSocketId\n    });\n  }, [remoteSocketId, socket]);\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      socket.emit(\"chat:message\", {\n        message: newMessage\n      });\n      setMessages([...messages, {\n        text: newMessage,\n        sender: \"me\"\n      }]);\n      setNewMessage(\"\");\n    }\n  };\n  const handleReceiveMessage = useCallback(({\n    message\n  }) => {\n    setMessages(prevMessages => [...prevMessages, {\n      text: message,\n      sender: \"other\"\n    }]);\n  }, []);\n  useEffect(() => {\n    peer.peer.addEventListener(\"negotiationneeded\", handleNegoNeeded);\n    return () => {\n      peer.peer.removeEventListener(\"negotiationneeded\", handleNegoNeeded);\n    };\n  }, [handleNegoNeeded]);\n  const handleNegoNeedIncomming = useCallback(async ({\n    from,\n    offer\n  }) => {\n    const ans = await peer.getAnswer(offer);\n    socket.emit(\"peer:nego:done\", {\n      to: from,\n      ans\n    });\n  }, [socket]);\n  const handleNegoNeedFinal = useCallback(async ({\n    ans\n  }) => {\n    await peer.setLocalDescription(ans);\n  }, []);\n  useEffect(() => {\n    peer.peer.addEventListener(\"track\", async ev => {\n      const remoteStream = ev.streams;\n      console.log(\"GOT TRACKS!!\");\n      setRemoteStream(remoteStream[0]);\n    });\n  }, []);\n  useEffect(() => {\n    socket.on(\"user:joined\", handleUserJoined);\n    socket.on(\"incomming:call\", handleIncommingCall);\n    socket.on(\"call:accepted\", handleCallAccepted);\n    socket.on(\"peer:nego:needed\", handleNegoNeedIncomming);\n    socket.on(\"peer:nego:final\", handleNegoNeedFinal);\n    socket.on(\"chat:message\", handleReceiveMessage);\n    return () => {\n      socket.off(\"user:joined\", handleUserJoined);\n      socket.off(\"incomming:call\", handleIncommingCall);\n      socket.off(\"call:accepted\", handleCallAccepted);\n      socket.off(\"peer:nego:needed\", handleNegoNeedIncomming);\n      socket.off(\"peer:nego:final\", handleNegoNeedFinal);\n      socket.off(\"chat:message\", handleReceiveMessage);\n    };\n  }, [socket, handleUserJoined, handleIncommingCall, handleCallAccepted, handleNegoNeedIncomming, handleNegoNeedFinal, handleReceiveMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: roomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: remoteSocketId ? \"Connected\" : \"No one in room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), myStream && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendStreams,\n        children: \"Send Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: isCalling ? handleEndCall : handleCallUser,\n        children: isCalling ? \"End\" : \"Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stream-container\",\n        children: [myStream && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stream\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My Stream\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            playing: true,\n            muted: true,\n            height: \"100%\",\n            width: \"100%\",\n            url: myStream\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), remoteStream && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stream\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Remote Stream\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            playing: true,\n            muted: true,\n            height: \"100%\",\n            width: \"100%\",\n            url: remoteStream\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === \"me\" ? \"right\" : \"left\"}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          className: \"input-field\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-btn\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomPage, \"RrLhANWBN9T6b5Fng4//6cQfpME=\", false, function () {\n  return [useParams, useSocket, useNavigate];\n});\n_c = RoomPage;\nexport default RoomPage;\nvar _c;\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["React","useEffect","useCallback","useState","useNavigate","useParams","ReactPlayer","peer","useSocket","jsxDEV","_jsxDEV","RoomPage","_s","roomId","socket","remoteSocketId","setRemoteSocketId","myStream","setMyStream","remoteStream","setRemoteStream","messages","setMessages","newMessage","setNewMessage","isCalling","setIsCalling","navigate","storedUser","localStorage","getItem","storeToken","handleUserJoined","email","id","console","log","handleCallUser","stream","navigator","mediaDevices","getUserMedia","audio","video","offer","getOffer","emit","to","handleEndCall","getTracks","forEach","track","stop","disconnect","handleIncommingCall","from","ans","getAnswer","sendStreams","senders","getSenders","existingSender","find","sender","addTrack","handleCallAccepted","setLocalDescription","handleNegoNeeded","handleSendMessage","trim","message","text","handleReceiveMessage","prevMessages","addEventListener","removeEventListener","handleNegoNeedIncomming","handleNegoNeedFinal","ev","streams","on","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","playing","muted","height","width","url","map","msg","index","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/md.golamrabbani/Desktop/web-rtc/React-webRTC/client/src/screens/Room.jsx"],"sourcesContent":["import React, { useEffect, useCallback, useState } from \"react\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ReactPlayer from \"react-player\";\nimport peer from \"../service/peer\";\nimport { useSocket } from \"../context/SocketProvider\";\nimport '../Room.css';\n\nconst RoomPage = () => {\n  const { roomId } = useParams();\n  const socket = useSocket();\n  const [remoteSocketId, setRemoteSocketId] = useState(null);\n  const [myStream, setMyStream] = useState();\n  const [remoteStream, setRemoteStream] = useState();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [isCalling, setIsCalling] = useState(false); // State to track if the call is ongoing\n  const navigate = useNavigate();\n  \n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const storeToken = localStorage.getItem('token')  \n    if(!storeToken && !storedUser){\n      navigate('/login');\n    }\n  }, []);\n\n  const handleUserJoined = useCallback(({ email, id }) => {\n    console.log(`Email ${email} joined room`);\n    setRemoteSocketId(id);\n  }, []);\n\n  const handleCallUser = useCallback(async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true,\n    });\n    const offer = await peer.getOffer();\n    socket.emit(\"user:call\", { to: remoteSocketId, offer });\n    setMyStream(stream);\n    setIsCalling(true); // Set the call as ongoing\n  }, [remoteSocketId, socket]);\n\n  // const handleEndCall = useCallback(() => {\n  //   socket.emit(\"call:end\", { to: remoteSocketId });\n  //   setIsCalling(false); // Set the call as ended\n  //   setMyStream(null); // Stop the stream\n  //   setRemoteStream(null); // Stop the remote stream\n\n  //   // Disconnect socket after the call ends\n  //   socket.disconnect();\n  //   console.log(\"Socket disconnected\");\n  // }, [remoteSocketId, socket]);\n\n  const handleEndCall = useCallback(() => {\n    // Stop all tracks of the local stream\n    if (myStream) {\n      myStream.getTracks().forEach(track => track.stop());\n    }\n    // Reset streams and call state\n    setMyStream(null);\n    setRemoteStream(null);\n    // setIsCallStarted(false);\n    socket.disconnect(); // Disconnect from the socket\n    navigate(\"/room-management\"); // Navigate to room-management page\n  }, [myStream, socket, navigate]);\n\n\n  const handleIncommingCall = useCallback(\n    async ({ from, offer }) => {\n      setRemoteSocketId(from);\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: true,\n      });\n      setMyStream(stream);\n      console.log(`Incoming Call from ${from}`, offer);\n      const ans = await peer.getAnswer(offer);\n      socket.emit(\"call:accepted\", { to: from, ans });\n    },\n    [socket]\n  );\n\n  const sendStreams = useCallback(() => {\n    if (!myStream) return;\n  \n    const senders = peer.peer.getSenders();\n    for (const track of myStream.getTracks()) {\n      const existingSender = senders.find(sender => sender.track === track);\n      \n      if (!existingSender) {\n        peer.peer.addTrack(track, myStream);\n      }\n    }\n  }, [myStream]);\n\n  const handleCallAccepted = useCallback(\n    ({ from, ans }) => {\n      peer.setLocalDescription(ans);\n      console.log(\"Call Accepted!\");\n      sendStreams();\n    },\n    [sendStreams]\n  );\n\n  const handleNegoNeeded = useCallback(async () => {\n    const offer = await peer.getOffer();\n    socket.emit(\"peer:nego:needed\", { offer, to: remoteSocketId });\n  }, [remoteSocketId, socket]);\n\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      socket.emit(\"chat:message\", { message: newMessage });\n      setMessages([...messages, { text: newMessage, sender: \"me\" }]);\n      setNewMessage(\"\");\n    }\n  };\n\n  const handleReceiveMessage = useCallback(({ message }) => {\n    setMessages((prevMessages) => [...prevMessages, { text: message, sender: \"other\" }]);\n  }, []);\n\n  useEffect(() => {\n    peer.peer.addEventListener(\"negotiationneeded\", handleNegoNeeded);\n    return () => {\n      peer.peer.removeEventListener(\"negotiationneeded\", handleNegoNeeded);\n    };\n  }, [handleNegoNeeded]);\n\n  const handleNegoNeedIncomming = useCallback(\n    async ({ from, offer }) => {\n      const ans = await peer.getAnswer(offer);\n      socket.emit(\"peer:nego:done\", { to: from, ans });\n    },\n    [socket]\n  );\n\n  const handleNegoNeedFinal = useCallback(async ({ ans }) => {\n    await peer.setLocalDescription(ans);\n  }, []);\n\n  useEffect(() => {\n    peer.peer.addEventListener(\"track\", async (ev) => {\n      const remoteStream = ev.streams;\n      console.log(\"GOT TRACKS!!\");\n      setRemoteStream(remoteStream[0]);\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"user:joined\", handleUserJoined);\n    socket.on(\"incomming:call\", handleIncommingCall);\n    socket.on(\"call:accepted\", handleCallAccepted);\n    socket.on(\"peer:nego:needed\", handleNegoNeedIncomming);\n    socket.on(\"peer:nego:final\", handleNegoNeedFinal);\n    socket.on(\"chat:message\", handleReceiveMessage);\n\n    return () => {\n      socket.off(\"user:joined\", handleUserJoined);\n      socket.off(\"incomming:call\", handleIncommingCall);\n      socket.off(\"call:accepted\", handleCallAccepted);\n      socket.off(\"peer:nego:needed\", handleNegoNeedIncomming);\n      socket.off(\"peer:nego:final\", handleNegoNeedFinal);\n      socket.off(\"chat:message\", handleReceiveMessage);\n    };\n  }, [\n    socket,\n    handleUserJoined,\n    handleIncommingCall,\n    handleCallAccepted,\n    handleNegoNeedIncomming,\n    handleNegoNeedFinal,\n    handleReceiveMessage,\n  ]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"video-container\">\n        <h1>{roomId}</h1>\n        <h4>{remoteSocketId ? \"Connected\" : \"No one in room\"}</h4>\n        {myStream && <button onClick={sendStreams}>Send Stream</button>}\n        <button onClick={isCalling ? handleEndCall : handleCallUser}>\n          {isCalling ? \"End\" : \"Call\"}\n        </button>\n\n        <div className=\"stream-container\">\n          {myStream && (\n            <div className=\"stream\">\n              <h1>My Stream</h1>\n              <ReactPlayer playing muted height=\"100%\" width=\"100%\" url={myStream} />\n            </div>\n          )}\n\n          {remoteStream && (\n            <div className=\"stream\">\n              <h1>Remote Stream</h1>\n              <ReactPlayer playing muted height=\"100%\" width=\"100%\" url={remoteStream} />\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"chat-container\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`message ${msg.sender === \"me\" ? \"right\" : \"left\"}`}>\n            {msg.text}\n          </div>\n        ))}\n        <div className=\"chat-input\">\n          <input\n            type=\"text\"\n            placeholder=\"Type a message...\"\n            className=\"input-field\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n          />\n          <button className=\"send-btn\" onClick={handleSendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RoomPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}