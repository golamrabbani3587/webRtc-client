{"ast":null,"code":"var _jsxFileName = \"/Users/md.golamrabbani/Desktop/web-rtc/React-webRTC/client/src/screens/RoomManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSocket } from '../context/SocketProvider';\nimport '../RoomManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomManagement = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [email, setEmail] = useState('');\n  const [description, setDescription] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [error, setError] = useState('');\n  const socket = useSocket();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const storeToken = localStorage.getItem('token');\n    if (storedUser && storeToken) {\n      const user = JSON.parse(storedUser);\n      setEmail(user.email);\n    } else {\n      navigate('/login');\n    }\n    fetchRooms();\n  }, []);\n  const fetchRooms = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5550/api/rooms', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setRooms(data);\n    } catch (err) {\n      setError('Could not fetch rooms. Please try again later.');\n    }\n  };\n  const handleCreateRoom = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5550/api/rooms', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          title,\n          description\n        })\n      });\n      if (response.ok) {\n        fetchRooms();\n        setTitle('');\n        setDescription('');\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Failed to create room. Try again.');\n      }\n    } catch (err) {\n      setError('Server error. Please try again later.');\n    }\n  };\n  const handleJoinRoom = useCallback(data => {\n    const {\n      room\n    } = data;\n    navigate(`/room/${room}`);\n  }, [navigate]);\n  const joinRoomFromList = roomTitle => {\n    if (email) {\n      socket.emit('room:join', {\n        email,\n        room: roomTitle\n      });\n    } else {\n      setError('Email is required to join a room');\n    }\n  };\n  useEffect(() => {\n    socket.on('room:join', handleJoinRoom);\n    return () => {\n      socket.off('room:join', handleJoinRoom);\n    };\n  }, [socket, handleJoinRoom]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateRoom,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Room Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-list\",\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-item\",\n        onClick: () => joinRoomFromList(room.title),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: room.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: room.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, room._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomManagement, \"oUgmwMiYjxx1Y4wUiVrzSoppjBM=\", false, function () {\n  return [useSocket, useNavigate];\n});\n_c = RoomManagement;\nexport default RoomManagement;\nvar _c;\n$RefreshReg$(_c, \"RoomManagement\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useSocket","jsxDEV","_jsxDEV","RoomManagement","_s","title","setTitle","email","setEmail","description","setDescription","rooms","setRooms","error","setError","socket","navigate","storedUser","localStorage","getItem","storeToken","user","JSON","parse","fetchRooms","token","response","fetch","headers","Authorization","data","json","err","handleCreateRoom","e","preventDefault","method","body","stringify","ok","message","handleJoinRoom","room","joinRoomFromList","roomTitle","emit","on","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","onClick","_id","_c","$RefreshReg$"],"sources":["/Users/md.golamrabbani/Desktop/web-rtc/React-webRTC/client/src/screens/RoomManagement.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSocket } from '../context/SocketProvider';\nimport '../RoomManagement.css';\n\nconst RoomManagement = () => {\n  const [title, setTitle] = useState('');\n  const [email, setEmail] = useState('');\n  const [description, setDescription] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [error, setError] = useState('');\n\n  const socket = useSocket();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const storeToken = localStorage.getItem('token')  \n    if (storedUser && storeToken ) {\n      const user = JSON.parse(storedUser);\n      setEmail(user.email); \n    }\n    else{\n      navigate('/login');\n    }\n    fetchRooms();\n  }, []);\n\n  const fetchRooms = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5550/api/rooms', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      const data = await response.json();\n      setRooms(data);\n    } catch (err) {\n      setError('Could not fetch rooms. Please try again later.');\n    }\n  };\n\n  const handleCreateRoom = async (e) => {\n    e.preventDefault();\n    setError('');\n  \n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5550/api/rooms', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ title, description }),\n      });\n  \n      if (response.ok) {\n        fetchRooms(); \n        setTitle('');\n        setDescription('');\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Failed to create room. Try again.');\n      }\n    } catch (err) {\n      setError('Server error. Please try again later.');\n    }\n  };\n\n  const handleJoinRoom = useCallback((data) => {\n    const { room } = data;\n    navigate(`/room/${room}`);\n  }, [navigate]);\n\n  const joinRoomFromList = (roomTitle) => {\n    if (email) {\n      socket.emit('room:join', { email, room: roomTitle });\n    } else {\n      setError('Email is required to join a room');\n    }\n  };\n\n  useEffect(() => {\n    socket.on('room:join', handleJoinRoom);\n    return () => {\n      socket.off('room:join', handleJoinRoom);\n    };\n  }, [socket, handleJoinRoom]);\n\n  return (\n    <div className=\"room-container\">\n      <h2>Create a Room</h2>\n      <form onSubmit={handleCreateRoom}>\n        <input\n          type=\"text\"\n          placeholder=\"Room Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          required\n        />\n        <textarea\n          placeholder=\"Room Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          required\n        ></textarea>\n        {error && <p className=\"error\">{error}</p>}\n        <button type=\"submit\">Create Room</button>\n      </form>\n      \n      <h2>Rooms</h2>\n      <div className=\"room-list\">\n        {rooms.map((room) => (\n          <div key={room._id} className=\"room-item\" onClick={() => joinRoomFromList(room.title)}>\n            <h3>{room.title}</h3>\n            <p>{room.description}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RoomManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}