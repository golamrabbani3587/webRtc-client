{"ast":null,"code":"var _jsxFileName = \"/Users/md.golamrabbani/Desktop/web-rtc/React-webRTC/client/src/screens/Room.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback, useState } from \"react\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ReactPlayer from \"react-player\";\nimport peer from \"../service/peer\";\nimport { useSocket } from \"../context/SocketProvider\";\nimport '../Room.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RoomPage = () => {\n  _s();\n\n  const {\n    roomId\n  } = useParams();\n  const socket = useSocket();\n  const [remoteSocketId, setRemoteSocketId] = useState(null);\n  const [myStream, setMyStream] = useState();\n  const [remoteStream, setRemoteStream] = useState();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [isCalling, setIsCalling] = useState(false); // State to track if the call is ongoing\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const storeToken = localStorage.getItem('token');\n\n    if (!storeToken && !storedUser) {\n      navigate('/login');\n    }\n  }, []);\n  const handleUserJoined = useCallback(_ref => {\n    let {\n      email,\n      id\n    } = _ref;\n    console.log(`Email ${email} joined room`);\n    setRemoteSocketId(id);\n  }, []);\n  const handleCallUser = useCallback(async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    });\n    const offer = await peer.getOffer();\n    socket.emit(\"user:call\", {\n      to: remoteSocketId,\n      offer\n    });\n    setMyStream(stream);\n    setIsCalling(true); // Set the call as ongoing\n  }, [remoteSocketId, socket]); // const handleEndCall = useCallback(() => {\n  //   socket.emit(\"call:end\", { to: remoteSocketId });\n  //   setIsCalling(false); // Set the call as ended\n  //   setMyStream(null); // Stop the stream\n  //   setRemoteStream(null); // Stop the remote stream\n  //   // Disconnect socket after the call ends\n  //   socket.disconnect();\n  //   console.log(\"Socket disconnected\");\n  // }, [remoteSocketId, socket]);\n\n  const handleEndCall = useCallback(() => {\n    // Stop all tracks of the local stream\n    if (myStream) {\n      myStream.getTracks().forEach(track => track.stop());\n    } // Reset streams and call state\n\n\n    setMyStream(null);\n    setRemoteStream(null); // setIsCallStarted(false);\n\n    socket.disconnect(); // Disconnect from the socket\n\n    navigate(\"/room-management\"); // Navigate to room-management page\n  }, [myStream, socket, navigate]);\n  const handleIncommingCall = useCallback(async _ref2 => {\n    let {\n      from,\n      offer\n    } = _ref2;\n    setRemoteSocketId(from);\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    });\n    setMyStream(stream);\n    console.log(`Incoming Call from ${from}`, offer);\n    const ans = await peer.getAnswer(offer);\n    socket.emit(\"call:accepted\", {\n      to: from,\n      ans\n    });\n  }, [socket]);\n  const sendStreams = useCallback(() => {\n    if (!myStream) return;\n    const senders = peer.peer.getSenders();\n\n    for (const track of myStream.getTracks()) {\n      const existingSender = senders.find(sender => sender.track === track);\n\n      if (!existingSender) {\n        peer.peer.addTrack(track, myStream);\n      }\n    }\n  }, [myStream]);\n  const handleCallAccepted = useCallback(_ref3 => {\n    let {\n      from,\n      ans\n    } = _ref3;\n    peer.setLocalDescription(ans);\n    console.log(\"Call Accepted!\");\n    sendStreams();\n  }, [sendStreams]);\n  const handleNegoNeeded = useCallback(async () => {\n    const offer = await peer.getOffer();\n    socket.emit(\"peer:nego:needed\", {\n      offer,\n      to: remoteSocketId\n    });\n  }, [remoteSocketId, socket]);\n\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      socket.emit(\"chat:message\", {\n        message: newMessage\n      });\n      setMessages([...messages, {\n        text: newMessage,\n        sender: \"me\"\n      }]);\n      setNewMessage(\"\");\n    }\n  };\n\n  const handleReceiveMessage = useCallback(_ref4 => {\n    let {\n      message\n    } = _ref4;\n    setMessages(prevMessages => [...prevMessages, {\n      text: message,\n      sender: \"other\"\n    }]);\n  }, []);\n  useEffect(() => {\n    peer.peer.addEventListener(\"negotiationneeded\", handleNegoNeeded);\n    return () => {\n      peer.peer.removeEventListener(\"negotiationneeded\", handleNegoNeeded);\n    };\n  }, [handleNegoNeeded]);\n  const handleNegoNeedIncomming = useCallback(async _ref5 => {\n    let {\n      from,\n      offer\n    } = _ref5;\n    const ans = await peer.getAnswer(offer);\n    socket.emit(\"peer:nego:done\", {\n      to: from,\n      ans\n    });\n  }, [socket]);\n  const handleNegoNeedFinal = useCallback(async _ref6 => {\n    let {\n      ans\n    } = _ref6;\n    await peer.setLocalDescription(ans);\n  }, []);\n  useEffect(() => {\n    peer.peer.addEventListener(\"track\", async ev => {\n      const remoteStream = ev.streams;\n      console.log(\"GOT TRACKS!!\");\n      setRemoteStream(remoteStream[0]);\n    });\n  }, []);\n  useEffect(() => {\n    socket.on(\"user:joined\", handleUserJoined);\n    socket.on(\"incomming:call\", handleIncommingCall);\n    socket.on(\"call:accepted\", handleCallAccepted);\n    socket.on(\"peer:nego:needed\", handleNegoNeedIncomming);\n    socket.on(\"peer:nego:final\", handleNegoNeedFinal);\n    socket.on(\"chat:message\", handleReceiveMessage);\n    return () => {\n      socket.off(\"user:joined\", handleUserJoined);\n      socket.off(\"incomming:call\", handleIncommingCall);\n      socket.off(\"call:accepted\", handleCallAccepted);\n      socket.off(\"peer:nego:needed\", handleNegoNeedIncomming);\n      socket.off(\"peer:nego:final\", handleNegoNeedFinal);\n      socket.off(\"chat:message\", handleReceiveMessage);\n    };\n  }, [socket, handleUserJoined, handleIncommingCall, handleCallAccepted, handleNegoNeedIncomming, handleNegoNeedFinal, handleReceiveMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: roomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: remoteSocketId ? \"Connected\" : \"No one in room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), myStream && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendStreams,\n        children: \"Send Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: isCalling ? handleEndCall : handleCallUser,\n        children: isCalling ? \"End\" : \"Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stream-container\",\n        children: [myStream && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stream\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My Stream\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            playing: true,\n            muted: true,\n            height: \"100%\",\n            width: \"100%\",\n            url: myStream\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), remoteStream && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stream\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Remote Stream\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            playing: true,\n            muted: true,\n            height: \"100%\",\n            width: \"100%\",\n            url: remoteStream\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === \"me\" ? \"right\" : \"left\"}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          className: \"input-field\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-btn\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoomPage, \"RrLhANWBN9T6b5Fng4//6cQfpME=\", false, function () {\n  return [useParams, useSocket, useNavigate];\n});\n\n_c = RoomPage;\nexport default RoomPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["React","useEffect","useCallback","useState","useNavigate","useParams","ReactPlayer","peer","useSocket","RoomPage","roomId","socket","remoteSocketId","setRemoteSocketId","myStream","setMyStream","remoteStream","setRemoteStream","messages","setMessages","newMessage","setNewMessage","isCalling","setIsCalling","navigate","storedUser","localStorage","getItem","storeToken","handleUserJoined","email","id","console","log","handleCallUser","stream","navigator","mediaDevices","getUserMedia","audio","video","offer","getOffer","emit","to","handleEndCall","getTracks","forEach","track","stop","disconnect","handleIncommingCall","from","ans","getAnswer","sendStreams","senders","getSenders","existingSender","find","sender","addTrack","handleCallAccepted","setLocalDescription","handleNegoNeeded","handleSendMessage","trim","message","text","handleReceiveMessage","prevMessages","addEventListener","removeEventListener","handleNegoNeedIncomming","handleNegoNeedFinal","ev","streams","on","off","map","msg","index","e","target","value"],"sources":["/Users/md.golamrabbani/Desktop/web-rtc/React-webRTC/client/src/screens/Room.jsx"],"sourcesContent":["import React, { useEffect, useCallback, useState } from \"react\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ReactPlayer from \"react-player\";\nimport peer from \"../service/peer\";\nimport { useSocket } from \"../context/SocketProvider\";\nimport '../Room.css';\n\nconst RoomPage = () => {\n  const { roomId } = useParams();\n  const socket = useSocket();\n  const [remoteSocketId, setRemoteSocketId] = useState(null);\n  const [myStream, setMyStream] = useState();\n  const [remoteStream, setRemoteStream] = useState();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [isCalling, setIsCalling] = useState(false); // State to track if the call is ongoing\n  const navigate = useNavigate();\n  \n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const storeToken = localStorage.getItem('token')  \n    if(!storeToken && !storedUser){\n      navigate('/login');\n    }\n  }, []);\n\n  const handleUserJoined = useCallback(({ email, id }) => {\n    console.log(`Email ${email} joined room`);\n    setRemoteSocketId(id);\n  }, []);\n\n  const handleCallUser = useCallback(async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true,\n    });\n    const offer = await peer.getOffer();\n    socket.emit(\"user:call\", { to: remoteSocketId, offer });\n    setMyStream(stream);\n    setIsCalling(true); // Set the call as ongoing\n  }, [remoteSocketId, socket]);\n\n  // const handleEndCall = useCallback(() => {\n  //   socket.emit(\"call:end\", { to: remoteSocketId });\n  //   setIsCalling(false); // Set the call as ended\n  //   setMyStream(null); // Stop the stream\n  //   setRemoteStream(null); // Stop the remote stream\n\n  //   // Disconnect socket after the call ends\n  //   socket.disconnect();\n  //   console.log(\"Socket disconnected\");\n  // }, [remoteSocketId, socket]);\n\n  const handleEndCall = useCallback(() => {\n    // Stop all tracks of the local stream\n    if (myStream) {\n      myStream.getTracks().forEach(track => track.stop());\n    }\n    // Reset streams and call state\n    setMyStream(null);\n    setRemoteStream(null);\n    // setIsCallStarted(false);\n    socket.disconnect(); // Disconnect from the socket\n    navigate(\"/room-management\"); // Navigate to room-management page\n  }, [myStream, socket, navigate]);\n\n\n  const handleIncommingCall = useCallback(\n    async ({ from, offer }) => {\n      setRemoteSocketId(from);\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: true,\n      });\n      setMyStream(stream);\n      console.log(`Incoming Call from ${from}`, offer);\n      const ans = await peer.getAnswer(offer);\n      socket.emit(\"call:accepted\", { to: from, ans });\n    },\n    [socket]\n  );\n\n  const sendStreams = useCallback(() => {\n    if (!myStream) return;\n  \n    const senders = peer.peer.getSenders();\n    for (const track of myStream.getTracks()) {\n      const existingSender = senders.find(sender => sender.track === track);\n      \n      if (!existingSender) {\n        peer.peer.addTrack(track, myStream);\n      }\n    }\n  }, [myStream]);\n\n  const handleCallAccepted = useCallback(\n    ({ from, ans }) => {\n      peer.setLocalDescription(ans);\n      console.log(\"Call Accepted!\");\n      sendStreams();\n    },\n    [sendStreams]\n  );\n\n  const handleNegoNeeded = useCallback(async () => {\n    const offer = await peer.getOffer();\n    socket.emit(\"peer:nego:needed\", { offer, to: remoteSocketId });\n  }, [remoteSocketId, socket]);\n\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      socket.emit(\"chat:message\", { message: newMessage });\n      setMessages([...messages, { text: newMessage, sender: \"me\" }]);\n      setNewMessage(\"\");\n    }\n  };\n\n  const handleReceiveMessage = useCallback(({ message }) => {\n    setMessages((prevMessages) => [...prevMessages, { text: message, sender: \"other\" }]);\n  }, []);\n\n  useEffect(() => {\n    peer.peer.addEventListener(\"negotiationneeded\", handleNegoNeeded);\n    return () => {\n      peer.peer.removeEventListener(\"negotiationneeded\", handleNegoNeeded);\n    };\n  }, [handleNegoNeeded]);\n\n  const handleNegoNeedIncomming = useCallback(\n    async ({ from, offer }) => {\n      const ans = await peer.getAnswer(offer);\n      socket.emit(\"peer:nego:done\", { to: from, ans });\n    },\n    [socket]\n  );\n\n  const handleNegoNeedFinal = useCallback(async ({ ans }) => {\n    await peer.setLocalDescription(ans);\n  }, []);\n\n  useEffect(() => {\n    peer.peer.addEventListener(\"track\", async (ev) => {\n      const remoteStream = ev.streams;\n      console.log(\"GOT TRACKS!!\");\n      setRemoteStream(remoteStream[0]);\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"user:joined\", handleUserJoined);\n    socket.on(\"incomming:call\", handleIncommingCall);\n    socket.on(\"call:accepted\", handleCallAccepted);\n    socket.on(\"peer:nego:needed\", handleNegoNeedIncomming);\n    socket.on(\"peer:nego:final\", handleNegoNeedFinal);\n    socket.on(\"chat:message\", handleReceiveMessage);\n\n    return () => {\n      socket.off(\"user:joined\", handleUserJoined);\n      socket.off(\"incomming:call\", handleIncommingCall);\n      socket.off(\"call:accepted\", handleCallAccepted);\n      socket.off(\"peer:nego:needed\", handleNegoNeedIncomming);\n      socket.off(\"peer:nego:final\", handleNegoNeedFinal);\n      socket.off(\"chat:message\", handleReceiveMessage);\n    };\n  }, [\n    socket,\n    handleUserJoined,\n    handleIncommingCall,\n    handleCallAccepted,\n    handleNegoNeedIncomming,\n    handleNegoNeedFinal,\n    handleReceiveMessage,\n  ]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"video-container\">\n        <h1>{roomId}</h1>\n        <h4>{remoteSocketId ? \"Connected\" : \"No one in room\"}</h4>\n        {myStream && <button onClick={sendStreams}>Send Stream</button>}\n        <button onClick={isCalling ? handleEndCall : handleCallUser}>\n          {isCalling ? \"End\" : \"Call\"}\n        </button>\n\n        <div className=\"stream-container\">\n          {myStream && (\n            <div className=\"stream\">\n              <h1>My Stream</h1>\n              <ReactPlayer playing muted height=\"100%\" width=\"100%\" url={myStream} />\n            </div>\n          )}\n\n          {remoteStream && (\n            <div className=\"stream\">\n              <h1>Remote Stream</h1>\n              <ReactPlayer playing muted height=\"100%\" width=\"100%\" url={remoteStream} />\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"chat-container\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`message ${msg.sender === \"me\" ? \"right\" : \"left\"}`}>\n            {msg.text}\n          </div>\n        ))}\n        <div className=\"chat-input\">\n          <input\n            type=\"text\"\n            placeholder=\"Type a message...\"\n            className=\"input-field\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n          />\n          <button className=\"send-btn\" onClick={handleSendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RoomPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}